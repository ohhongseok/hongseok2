#/--------------------------------------------------------------------------/#
#Date : 2020-08-07
#Lecture : 나도코딩 파이썬 강의 / WikiDocs 점프투 파이썬

from math import *                  #floor, ceil, sqrt 같은 math 매소드 사용하기위함
from random import *

#--------[숫자처리 함수]---------#
print(abs(-5))                  #절댓값 -5
print(pow(4,2))                 #거듭제곱근 4^2
print(pow(4,3))                 #거듭제곱근 4^3
print(max(5,12))                #최댓값 계산
print(min(5,12))                #최솟값 계산
print(max(5,12,20,40))          #최댓값을 쓸때 여러값 비교가능
print(round(3.14))              #소숫점아래 첫째자리 반올림, 3
print(round(5.9))               #6

'''파이썬 math librry 사용하기'''
print(floor(4.99))              #내림, 4
print(ceil(3.14))               #올림, 4
print(int(sqrt(16)))            #제곱근, 4 int()를 안쓰면, 4.0 출력됨

print(random())                 #0.0 ~ 1.0 미만의 랜덤한 숫자 출력
print(random()*10)              #0.0 ~ 10.0 미만의 임의의 숫자 출력
print(int(random()*10))         # 0 이상 ~ 10 미만 사이의 임의의 정수
print(int(random()*10)+1)       # 1 이상 ~ 10 이하의 랜덤한 수
'''또다른 랜덤 함수 사용'''
print(randrange(1,46))          # 1 이상 46 미만의 랜덤한 수
print(randint(1,45))            # 1 이상 45 이하의 랜덤한 수

#--------[문자열]---------#
sentence = '나는 학생입니다.'                   #작은따옴표 사이에 있는 문장
print(sentence)             
sentence2 ="파이썬 재밌누~"                     #큰따옴표 사이에 있는 문장
print(sentence2)

sentence3 = """
큰따옴표를 세번 적으면
여러문장을 여러줄에 걸쳐서
출력을 할 수 있다. 이건 진짜 
신박한 기능이네 파이썬 지렸다..
"""
print(sentence3)

#--------[슬라이싱]---------#
"""
슬라이싱 : 연속적인 객체들의(리스트, 문자열 등..) 범위를 지정해
특정 범위의 객체들을 가져오는 방법 이다.

-------------------[] 의 기본 포멧------------------------
[시작좌표 : 0부터 ~ 목표하는 문자의 갯수+1]

"""
jumin="960527-1123456"
'''1 : 성별만 가져오기'''
print("성별 :", jumin[7])                   #1
'''2 : 년도 가져오기'''
print("연 :",jumin[0:2])                    #96
'''3 : 월 정보 가져오기'''
print("월 :", jumin[2:4])                   #05
'''4 : 잉 정보 가져오기'''
print("일 :", jumin[4:6])                   #27
'''생년월일 가져오기'''
print("생년월일 : " + jumin[0:6])           #960527
print("생년월일 : " + jumin[:6])            #960527

jumin="960527-1123456"
print("주민번호 뒷자리 : " + jumin[7:14])     #1123456
print("주민번호 뒷자리 : " + jumin[7:])       #1123456, 바로위와 같다.
print("주민번호 뒷자리 역순 ", jumin[-7:])
'''맨 뒷자리는 인덱스가 -1, 따라서 이 부터 끝까지'''

